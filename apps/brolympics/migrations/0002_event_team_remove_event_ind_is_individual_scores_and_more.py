# Generated by Django 4.2.2 on 2023-07-14 20:16

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('brolympics', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Event_Team',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=60)),
                ('is_high_score_wins', models.BooleanField(default=True)),
                ('max_score', models.FloatField(default=100, null=True)),
                ('min_score', models.FloatField(default=0, null=True)),
                ('start_time', models.DateTimeField(blank=True, null=True)),
                ('end_time', models.DateTimeField(blank=True, null=True)),
                ('is_concluded', models.BooleanField(default=False)),
                ('display_avg_scores', models.BooleanField(default=True)),
                ('n_competitions', models.PositiveIntegerField(default=1)),
                ('n_active_limit', models.PositiveIntegerField(blank=True, null=True)),
                ('is_available', models.BooleanField(default=False)),
                ('brolympics', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='%(class)s_set', to='brolympics.brolympics')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.RemoveField(
            model_name='event_ind',
            name='is_individual_scores',
        ),
        migrations.RemoveField(
            model_name='eventranking_ind',
            name='is_individual_scores',
        ),
        migrations.AlterField(
            model_name='event_h2h',
            name='brolympics',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='%(class)s_set', to='brolympics.brolympics'),
        ),
        migrations.AlterField(
            model_name='team',
            name='player_1',
            field=models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, related_name='player_1_set', to=settings.AUTH_USER_MODEL),
            preserve_default=False,
        ),
        migrations.CreateModel(
            name='EventRanking_Team',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('team_total_score', models.FloatField(blank=True, null=True)),
                ('team_avg_score', models.FloatField(blank=True, null=True)),
                ('rank', models.PositiveIntegerField(default=1)),
                ('points', models.FloatField(default=0)),
                ('is_final', models.BooleanField(default=False)),
                ('event', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='event_team_event_rankings', to='brolympics.event_team')),
                ('team', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='team_team_event_rankings', to='brolympics.team')),
            ],
        ),
        migrations.CreateModel(
            name='Competition_Team',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('team_score', models.FloatField(blank=True, null=True)),
                ('start_time', models.DateTimeField(blank=True, null=True)),
                ('end_time', models.DateTimeField(blank=True, null=True)),
                ('is_active', models.BooleanField(default=False)),
                ('is_complete', models.BooleanField(default=False)),
                ('event', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='team_comp', to='brolympics.event_team')),
                ('team', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='team_competition_team', to='brolympics.team')),
            ],
        ),
    ]
